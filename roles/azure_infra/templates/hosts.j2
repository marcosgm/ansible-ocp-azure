[OSEv3:children]
masters
etcd
nodes
glusterfs

[OSEv3:vars]
# fix for bug
# https://access.redhat.com/solutions/3480921
ereg_url_master=registry.access.redhat.com/openshift3/ose-${component}:${version}
oreg_url_node=registry.access.redhat.com/openshift3/ose-${component}:${version}


openshift_examples_modify_imagestreams=true

{% if deploy_cns | default(true) | bool %}
# CNS Bug https://bugzilla.redhat.com/show_bug.cgi?id=1581622
openshift_storage_glusterfs_heketi_image=registry.access.redhat.com/rhgs3/rhgs-volmanager-rhel7
openshift_storage_glusterfs_image=registry.access.redhat.com/rhgs3/rhgs-server-rhel7
openshift_storage_glusterfs_block_image=registry.access.redhat.com/rhgs3/rhgs-gluster-block-prov-rhel7
openshift_storage_glusterfs_s3_image=registry.access.redhat.com/rhgs3/rhgs-gluster-s3-server-rhel7# 

# Gluster Default SC
openshift_storage_glusterfs_storageclass_default=true
{% else %}
# StorageClass if not CNS
openshift_storageclass_default=true
openshift_storageclass_name=azure-storage
openshift_storageclass_provisioner=azure-disk
openshift_storageclass_parameters={'storageaccounttype': 'Standard_LRS', 'kind': 'managed'}
{% endif %}

ansible_ssh_user="{{ admin_user }}"
ansible_become=true
openshift_cloudprovider_kind=azure
osm_controller_args={'cloud-provider': ['azure'], 'cloud-config': ['/etc/origin/cloudprovider/azure.conf']}
osm_api_server_args={'cloud-provider': ['azure'], 'cloud-config': ['/etc/origin/cloudprovider/azure.conf']}
openshift_node_kubelet_args={'cloud-provider': ['azure'], 'cloud-config': ['/etc/origin/cloudprovider/azure.conf'], 'enable-controller-attach-detach': ['true']}
openshift_master_api_port=443
openshift_master_console_port=443
openshift_hosted_router_replicas={{ infra_nodes | length }}
openshift_hosted_registry_replicas={{ infra_nodes | length }}
openshift_master_cluster_method=native

{% if master_lb_private_ip is not defined and master_lb_dns is not defined %}
openshift_master_cluster_hostname={{ rg }}.{{ location }}.cloudapp.azure.com
openshift_master_cluster_public_hostname={{ rg }}.{{ location }}.cloudapp.azure.com
{% elif master_lb_private_ip is not defined %}
openshift_master_cluster_hostname={{ master_lb_dns }}
openshift_master_cluster_public_hostname={{ master_lb_dns }}
{% else %}
openshift_master_cluster_hostname=ocp-master-1
openshift_master_cluster_public_hostname={{ master_lb_dns }}
{% endif %}

{% if router_lb_default_subdomain is defined %}
openshift_master_default_subdomain={{ router_lb_default_subdomain }}
{% else %}
openshift_master_default_subdomain={{ router_lb_ip }}.nip.io
{% endif %}

openshift_deployment_type=openshift-enterprise
openshift_release=v3.9

{% if router_cert is defined %}
####################
## custom certs
## Router
#####################
openshift_hosted_router_certificate={{ router_cert }}
{% endif %}

{% if master_cert is defined %}
# MASTER/API
openshift_master_overwrite_named_certificates=true
openshift_master_named_certificates={{ master_cert }}
{% endif %}
{% if openshift_master_identity_providers is defined %}

openshift_master_identity_providers={{ openshift_master_identity_providers }}
{% else %}
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
{% endif %}

{% if openshift_master_htpasswd_users is defined %}
openshift_master_htpasswd_users={{ openshift_master_htpasswd_users }}
{% else %}
# admin:redhat
openshift_master_htpasswd_users={'admin': '$apr1$VZeARzoK$zYM/4c82PKDeYmw6/RvOV/'}
{% endif %}
openshift_master_manage_htpasswd=true

openshift_node_local_quota_per_fsgroup=512Mi
os_sdn_network_plugin_name=redhat/openshift-ovs-multitenant

{% if osm_cluster_network_cidr is defined %}
osm_cluster_network_cidr={{ osm_cluster_network_cidr }}
{% endif %}
{% if openshift_portal_net is defined %}
openshift_portal_net={{ openshift_portal_net }}
{% endif %}

# Docker
container_runtime_docker_storage_setup_device=/dev/disk/azure/scsi1/lun1
container_runtime_docker_storage_type=overlay2
openshift_docker_use_system_container=False
openshift_use_system_containers=False

# disable cockpit
osm_use_cockpit=false
openshift_enable_service_catalog=true

{% if osm_project_request_message is defined %}
osm_project_request_message="{{ osm_project_request_message }}"
{% endif %}

{% if osm_project_request_message is defined %}
osm_project_request_message="{{ osm_project_request_message }}"
{% endif %}

# Setup azure blob registry storage
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=azure_blob
openshift_hosted_registry_storage_azure_blob_accountname={{ registry_storage_account }}
openshift_hosted_registry_storage_azure_blob_accountkey={{ registry_storage_account_key }}
openshift_hosted_registry_storage_azure_blob_container=registry
openshift_hosted_registry_storage_azure_blob_realm=core.windows.net

{% if deploy_logging | default(true) | bool %}
# logging
openshift_logging_install_logging=true
openshift_logging_es_pvc_size={{ logging_volume_size | default('100Gi') }}
openshift_logging_es_pvc_dynamic=True
openshift_logging_es_nodeselector={"region": "infra"}
openshift_logging_kibana_nodeselector={"region": "infra"}
openshift_logging_curator_nodeselector={"region": "infra"}
openshift_logging_es_cluster_size={{ infra_nodes | length }}
{% else %}
openshift_logging_install_logging=false
{% endif %}

{% if deploy_metrics | default(true) | bool %}
# metrics
openshift_metrics_install_metrics=true
openshift_metrics_storage_volume_size={{ metrics_volume_size | default('20Gi') }}
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_cassandra_replicas="1"
openshift_metrics_hawkular_nodeselector={"region":"infra"}
openshift_metrics_cassandra_nodeselector={"region":"infra"}
openshift_metrics_heapster_nodeselector={"region":"infra"}
{% else %}
openshift_metrics_install_metrics=false
{% endif %}

{% if deploy_prometheus | default(true) | bool %}
# prometheus
openshift_hosted_prometheus_deploy=true
openshift_prometheus_storage_kind=dynamic
openshift_prometheus_storage_type=pvc
openshift_prometheus_storage_volume_size={{ prometheus_volume_size | default('20Gi') }}
openshift_prometheus_alertmanager_storage_type=pvc
openshift_prometheus_alertmanager_pvc_size=10Gi
openshift_prometheus_alertmanager_pvc_name=alertmanager
openshift_prometheus_alertbuffer_storage_type=pvc
{% else %}
openshift_hosted_prometheus_deploy=false
{% endif %}

# grafana
openshift_grafana_state=present
openshift_grafana_node_exporter=true
openshift_grafana_storage_type=pvc

[masters]
{% for i in master_nodes %}
ocp-master-{{ i }}
{% endfor %}

[infra]
{% for i in infra_nodes %}
ocp-infra-{{ i }}
{% endfor %}

[etcd]
{% for i in master_nodes %}
ocp-master-{{ i }}
{% endfor %}

[nodes]
{% for i in master_nodes %}
ocp-master-{{ i }}  openshift_node_labels="{'region': 'master'}" openshift_hostname=ocp-master-{{ i }}
{% endfor %}

{% for i in infra_nodes %}
ocp-infra-{{ i }}  openshift_node_labels="{'region': 'infra'}" openshift_hostname=ocp-infra-{{ i }}
{% endfor %}

{% for i in app_nodes %}
ocp-app-{{ i }} openshift_node_labels="{'region': 'apps'}" openshift_hostname=ocp-app-{{ i }}
{% endfor %}

{% if deploy_cns | default(true) | bool and not deploy_cns_on_infra | default(false) | bool %}
{% for i in cns_nodes %}
ocp-cns-{{ i }} openshift_schedulable=True openshift_hostname=ocp-cns-{{ i }}
{% endfor %}
{% endif %}

[glusterfs]
{% if deploy_cns | default(true) | bool %} 
{% if not deploy_cns_on_infra | default(false) | bool %}
{% for i in cns_nodes %}
ocp-cns-{{ i }}  glusterfs_devices='[ "/dev/disk/azure/scsi1/lun2" ]'
{% endfor %}
{% else %}
{% for i in infra_nodes %}
ocp-infra-{{ i }} glusterfs_devices='[ "/dev/disk/azure/scsi1/lun2" ]'
{% endfor %}
{% endif %}
{% endif %}
